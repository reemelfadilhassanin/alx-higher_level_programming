``1-my_list`` module
======================


Importing function from the module:
>>> MyList = __import__("1-my_list").MyList

Checke module docstring:
>>> mo = __import__("1-my_list").__doc__
>>> len(mo) > 1
True

Checke class docstring:
>>> cl = __import__("1-my_list").MyList.__doc__
>>> len(cl) > 1
True

Checke method docstring
        >>> mtd = __import__("1-my_list").MyList.print_sorted.__doc__
        >>> len(mtd) > 1
        True

Checke if MyList inherits from list:
	 >>> issubclass(MyList, list)
	 True

Test if empty list:
	 >>> list = MyList()
	 >>> list.print_sorted()
	 []

Test using given test case
>>> list = MyList()

>>> list.append(1)

>>> list.append(4)

>>> list.append(2)

>>> list.append(3)

>>> list.append(5)

>>> print(list)
[1, 4, 2, 3, 5]

>>> list.print_sorted()
[1, 2, 3, 4, 5]

>>> print(list)
[1, 4, 2, 3, 5]

Checking empty object
>>> list = MyList()
>>> list.print_sorted()
[]

>>> obj1.print_sorted()
[]

Test if appendng:
	>>> list.append(-1)
	>>> list.append(-2)
	>>> list.append(-3)
	>>> list.append(-4)
	>>> print(list)
	[-1, -2, -3, -4]
	>>> list.print_sorted()
	[-4, -3, -2, -1]


Checking NULL object
>>> obj3 = MyList()

>>> obj3.append(NULL)
Traceback (most recent call last):
    ...
NameError: name 'NULL' is not defined

>>> print(obj3)
[]

>>> obj3.print_sorted()
[]

Test NaN object
>>> test2 = MyList()

>>> test2.append(NaN)
Traceback (most recent call last):
    ...
NameError: name 'NaN' is not defined

>>> print(test2)
[]

>>> test2.print_sorted()
[]

Test None
>>> test3 = MyList()

>>> test3.append(None)

>>> print(test3)
[None]

>>> test3.print_sorted()
[None]

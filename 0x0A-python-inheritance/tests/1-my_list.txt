
1-my_list module
====================

Importing the class from the module:
>>> MyList = __import__("1-my_list").MyList

Test module docstring:
>>> m_test = __import__("1-my_list").__doc__
>>> len(m_test) > 1
True

Test class docstring:
>>> c_test = __import__("1-my_list").MyList.__doc__
>>> len(c_test) > 1
True

Test method docstring
        >>> method_test = __import__("1-my_list").MyList.print_sorted.__doc__
        >>> len(method_test) > 1
        True

Tets using given test case
>>> my_l = MyList()

>>> my_l.append(1)

>>> my_l.append(4)

>>> my_l.append(2)

>>> my_l.append(3)

>>> my_l.append(5)

>>> print(my_l)
[1, 4, 2, 3, 5]

>>> my_l.print_sorted()
[1, 2, 3, 4, 5]

>>> print(my_l)
[1, 4, 2, 3, 5]

Test empty
>>> empty_t = MyList()

>>> print(empty_t)
[]

>>> empty_t.print_sorted()
[]

Test negative
>>> test2 = MyList()

>>> test2.append(-1)

>>> test2.append(0)

>>> test2.append(-2)

>>> otest2.append(-10)

>>> print(test2)
[-1, 0, -2, -10]

>>> test2.print_sorted()
[-10, -2, -1, 0]

Test NULL
>>> test3 = MyList()

>>> test3.append(NULL)
Traceback (most recent call last):
    ...
NameError: name 'NULL' is not defined

>>> print(test3)
[]

>>> test3.print_sorted()
[]

Test NaN
>>> test4 = MyList()

>>> test3.append(NaN)
Traceback (most recent call last):
    ...
NameError: name 'NaN' is not defined

>>> print(test3)
[]

>>> test3.print_sorted()
[]

Test None
>>> test4 = MyList()

>>> test3.append(None)

>>> print(test3)
[None]

>>> test3.print_sorted()
[None]

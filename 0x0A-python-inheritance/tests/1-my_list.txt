
define ``1-my_list`` module
===========================

Importing the class from the module:
>>> MyList = __import__("1-my_list").MyList

Test module docstring:
>>> me = __import__("1-my_list").__doc__
>>> len(me) > 1
True

Test class docstring:
>>> cl = __import__("1-my_list").MyList.__doc__
>>> len(cl) > 1
True

Test method docstring
    >>> md = __import__("1-my_list").MyList.print_sorted.__doc__
    >>> len(md) > 1
     True
Test MyList inherits from list:
	>>> issubclass(MyList, list)
	True

Test using given test case
>>> my_list = MyList()

>>> my_list.append(1)

>>> my_list.append(4)

>>> my_list.append(2)

>>> my_list.append(3)

>>> my_list.append(5)

>>> print(my_list)
[1, 4, 2, 3, 5]

>>> my_list.print_sorted()
[1, 2, 3, 4, 5]

>>> print(my_list)
[1, 4, 2, 3, 5]

Test empty object
>>> t1 = MyList()

>>> print(t1)
[]

>>> t1.print_sorted()
[]

Test  negative values
>>> t2 = MyList()

>>> t2.append(0)

>>> t2.append(-1)

>>> t2.append(-3)

>>> t2.append(-10)

>>> print(t2)
[0, -1, -3, -10]

>>> t2.print_sorted()
[-3, -10, -1, 0]


Test NaN object
>>> t5 = MyList()

>>> t5.append(NaN)
Traceback (most recent call last):
    ...
NameError: name 'NaN' is not defined

>>> print(t5)
[]

>>> t5.print_sorted()
[]
Test None object
>>> t7 = MyList()

>>> t7.append(None)

>>> print(t7)
[None]

>>> t7.print_sorted()
[None]
Test NULL object
>>> t4 = MyList()

>>> t4.append(NULL)
Traceback (most recent call last):
    ...
NameError: name 'NULL' is not defined

>>> print(t4)
[]

>>> t4.print_sorted()
[]
Test validate arguments:
	>>> t9 = MyList()
	>>> t9.print_sorted(10)
	 Traceback (most recent call last):
	 ...
	 TypeError: print_sorted() takes 1 positional argument but 2 were given
